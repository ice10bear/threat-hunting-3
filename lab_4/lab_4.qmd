---
title: "Практическое задание №4"
author: "Емельяненко Мария БИСО-01-20"
format:   
  md:
    output-file: README.md
---

# Анализ данных сетевой активности с использованием аналитической in-memory СУБД DuckDB

## Цель работы

1.  Изучить возможности СУБД **DuckDB** для ообработки и анализа больших данных
2.  Получить навыки применения **DuckDB** совместно с языком программирования R
3.  Получить навыки анализа метаинформации о сетевом трафике
4.  Закрепить навыки применения облачных технологий хранения, подготовки и анализа данных: **Yandex Object Storage**, **RStudio Server**

## Исходные данные

1.  ОС Windows 10
2.  RStudio Server
3.  Yandex Cloud: S3 Object Storage
4.  СУБД DuckDB
5.  Датасет tm_data.pqt

**Общая ситуация**

Вы – специалист по информационной безопасности компании “СуперМегатек”. Вы, являясь специалистом Threat Hunting, часто используете информацию о сетевом трафике для обнаружения подозрительной и вредоносной активности. Помогите защитить Вашу компанию от международной хакерской группировки AnonMasons.

У Вас есть данные сетевой активности в корпоративной сети компании “СуперМегатек”. Данные хранятся в **Yandex Object Storage**.

## Задание

Используя язык программирования R, СУБД и пакет `duckdb` и облачную IDE **Rstudio Server**, развернутую в Yandex Cloud, выполнить задания и составить отчёт.

## Ход работы

### Шаг 1. Подключение к RStudio Server

Подключимся к RStudio Server:

`ssh -i C:\Users\Maxa\Desktop\rstudio.key -L 8787:127.0.0.1:8787 user22062.84.123.211`

### Шаг 2. Установка библиотек и импорт датасета

```{r}
library(duckdb)
library(dplyr)
library(tidyverse)

con <- dbConnect(duckdb::duckdb(), dbdir = ":memory:")
dbExecute(conn = con, "INSTALL httpfs; LOAD httpfs;")

parquet_file = "https://storage.yandexcloud.net/arrow-datasets/tm_data.pqt"

query <- "SELECT * FROM read_parquet([?])"
df <- dbGetQuery(con, query, list(parquet_file))

df %>% head
```

### Шаг 3. Выполнение заданий

#### Задание 1. Найдите утечку данных из Вашей сети

Важнейшие документы с результатами нашей исследовательской деятельности в области создания вакцин скачиваются в виде больших заархивированных дампов. Один из хостов в нашей сети используется для пересылки этой информации – он пересылает гораздо больше информации на внешние ресурсы в Интернете, чем остальные компьютеры нашей сети. Определите его IP-адрес.

```{r}
df_1 <- df %>%
  filter(!grepl('^1[2-4].*', dst)) %>%
  group_by(src) %>%
  summarise(sum_bytes = sum(bytes)) %>%
  top_n(n = 1, wt = sum_bytes)

df_1 %>% collect()
```
**Ответ: 13.37.84.125**

#### Задание 2. Найдите утечку данных 2

Другой атакующий установил автоматическую задачу в системном планировщике `cron` для экспорта содержимого внутренней wiki системы. Эта система генерирует большое количество трафика в нерабочие часы, больше чем остальные хосты. Определите IP этой системы. Известно, что ее IP адрес отличается от нарушителя из предыдущей задачи.

Определим рабочие и нерабочие часы:

```{r}
work_time <- df %>%
  filter(!grepl('^1[2-4].*', dst)) %>%
  mutate(timestamp = hour(as_datetime(timestamp / 1000))) %>% 
  group_by(timestamp) %>% 
  summarize(sum_bytes = sum(bytes)) %>% 
  arrange(desc(sum_bytes))

work_time %>% collect()
```

```{r}
df_2 <- df %>%
  mutate(timestamp = hour(as_datetime(timestamp / 1000))) %>%
  filter(!grepl('^1[2-4].*', dst) & timestamp >= 0 & timestamp <= 15) %>%
  group_by(src) %>%
  summarise(sum_bytes = sum(bytes)) %>%
  filter(src != "13.37.84.125") %>%
  top_n(1, wt = sum_bytes)

df_2 %>% collect()
```

**Ответ: 12.55.77.96**

#### Задание 3. Найдите утечку данных 3

Еще один нарушитель собирает содержимое электронной почты и отправляет в Интернет используя порт, который обычно используется для другого типа трафика. Атакующий пересылает большое количество информации используя этот порт, которое нехарактерно для других хостов, использующих этот номер порта. Определите IP этой системы. Известно, что ее IP адрес отличается от нарушителей из предыдущих задач.

```{r}
df_3 <- df %>%
  filter(!grepl('^1[2-4].*', dst) & src != "13.37.84.125" & src != "12.55.77.96") %>%
  group_by(src, port) %>%
  summarise(bytes_ip_port = sum(bytes), .groups = "drop") %>%
  group_by(port) %>%
  mutate(sum_traffic_by_port = mean(bytes_ip_port)) %>%
  ungroup() %>%
  top_n(1, bytes_ip_port / sum_traffic_by_port)

df_3 %>% collect()
```

**Ответ: 12.30.96.87**

#### Задание 4. Обнаружение канала управления

Зачастую в корпоративных сетях находятся ранее зараженные системы, компрометация которых осталась незамеченной. Такие системы генерируют небольшое количество трафика для связи с панелью управления бот-сети, но с одинаковыми параметрами – в данном случае с одинаковым номером порта. Какой номер порта используется бот-панелью для управления ботами?

```{r}
df_4 <- df%>%
  group_by(port) %>%
  summarise(min_bytes = min(bytes),
            max_bytes = max(bytes),
            diff_bytes = max(bytes) - min(bytes),
            avg_bytes = mean(bytes),
            count = n()) %>%
  filter(avg_bytes - min_bytes < 10 & min_bytes != max_bytes) %>%
  select(port)

df_4 %>% collect()
```

**Ответ: 124**

#### Задание 5. Обнаружение P2P трафика

Иногда компрометация сети проявляется в нехарактерном трафике между хостами в локальной сети, который свидетельствует о горизонтальном перемещении (lateral movement). В нашей сети замечена система, которая ретранслирует по локальной сети полученные от панели управления бот-сети команды, создав таким образом внутреннюю пиринговую сеть. Какой уникальный порт используется этой бот сетью для внутреннего общения между собой?

```{r}
df_5 <- df %>%
  filter(grepl('^1[2-4].*', src) & grepl('^1[2-4].*', dst)) %>%
  group_by(port) %>%
  summarise(diff_bytes = max(bytes) - min(bytes)) %>%
  arrange(desc(diff_bytes)) %>% 
  select(port) %>%
  head(1)

df_5 %>% collect()
```

**Ответ: 115**

#### Задание 6. Чемпион малвари

Нашу сеть только что внесли в списки спам-ферм. Один из хостов сети получает множество команд от панели C&C, ретранслируя их внутри сети. В обычных условиях причин для такого активного взаимодействия внутри сети у данного хоста нет. Определите IP такого хоста.

```{r}
df_6 <- df %>%
  filter(grepl('^1[2-4].*', src) & grepl('^1[2-4].*', dst)) %>%
  group_by(src) %>%
  summarise(count = n()) %>%
  arrange(desc(count)) %>%
  head(1)

df_6 %>% collect()
```

**Ответ: 13.42.70.40**

```{r}
dbDisconnect(con, shutdown=TRUE)
```

## Оценка результатов

В результате практической работы был проведен анализ сетевой активности с помощью `Apache Arrow` и `DuckDB` и были найдены проблемы во внутренней сети предприятия

## Вывод

Были получены навыки использования СУБД `DuckDB` для обработки и анализа больших данных совместно с языком программирования R